// Generated by CoffeeScript 1.4.0
(function() {

  $(function() {
    "use strict";

    var App, socket;
    socket = io.connect(window.location.hostname);
    App = Ember.Application.create({
      rootElement: '#wrapper',
      socket: socket,
      currentUser: null,
      nameEntered: false
    });
    App.scrollToBottom = function() {
      return setTimeout(function() {
        return $('.chatlist').scrollTop($('.chatlist')[0].scrollHeight);
      }, 500);
    };
    App.message = Ember.Object.extend({
      message: null,
      name: null
    });
    App.User = Ember.Object.extend({
      name: null
    });
    App.MessageController = Ember.Controller.extend({
      messages: Ember.A(),
      init: function() {},
      createMessage: function(message, user) {
        return this.get('messages').addObject(App.MessageController.create({
          message: message,
          name: user
        }));
      }
    });
    App.UserController = Ember.Controller.extend({
      users: Ember.A(),
      init: function() {
        var storedName;
        storedName = localStorage.getItem('chatapp:username');
        if (storedName != null) {
          App.set('currentUser', storedName);
          App.set('nameEntered', true);
          return App.socket.emit('join', storedName);
        }
      },
      createUser: function(name) {
        return this.get('users').addObject(App.User.create({
          name: name
        }));
      },
      removeUser: function(property, value) {
        var object;
        object = this.findProperty(property, value);
        return this.removeObject(object);
      }
    });
    App.messageController = App.MessageController.create();
    App.userController = App.UserController.create();
    App.EnterNameView = Ember.TextArea.extend({
      insertNewline: function() {
        var value;
        value = this.get('value');
        if (value != null) {
          this.set('value', null);
          App.socket.emit('join', value);
          App.set('nameEntered', true);
          return localStorage.setItem('chatapp:username', value);
        }
      }
    });
    App.CreateMessageView = Ember.TextArea.extend({
      insertNewline: function() {
        var user, value;
        value = this.get('value');
        if (value != null) {
          this.set('value', null);
          user = App.currentuser;
          return App.socket.emit('messages', value);
        }
      }
    });
    App.socket.on('messages', function(data) {
      data = JSON.parse(data);
      App.messageController.createMessage(data.message.replace("<br />", "\n"), data.name);
      return App.scrollToBottom();
    });
    App.socket.on('chatters', function(data) {
      data = JSON.parse(data);
      return $.each(data, function(key, value) {
        return App.userController.createUser(value);
      });
    });
    App.socket.on('remove chatter', function(name) {
      return App.userController.removeUser('name', name);
    });
    App.socket.on('add chatter', function(name) {
      return App.userController.createUser(name);
    });
    App.scrollToBottom();
    $(window).unload(function() {
      return App.socket.disconnect();
    });
    return window.Chat = App;
  });

}).call(this);
